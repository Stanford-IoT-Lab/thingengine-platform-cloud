# override this to "stanfordoval/decanlp:latest-cuda" if cuda is desired
ARG BASE_IMAGE=stanfordoval/decanlp:latest
FROM ${BASE_IMAGE}

MAINTAINER Thingpedia Admins <thingpedia-admins@lists.stanford.edu>

# install basic tools
USER root
RUN yum -y install make gettext unzip

# install nodejs 10.x and yarn
RUN curl -sL https://rpm.nodesource.com/setup_10.x | bash -
RUN curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo
RUN yum -y install nodejs yarn

# install aws client
RUN pip3 install awscli
RUN curl --silent --location \
    "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | \
    tar xz -C /usr/local/bin

# install sqlcipher
RUN wget https://copr.fedorainfracloud.org/coprs/gcampax/sqlcipher/repo/epel-7/gcampax-sqlcipher-epel-7.repo -O /etc/yum.repos.d/gcampax-sqlcipher-epel-7.repo
RUN yum -y install sqlcipher sqlcipher-devel

# install cvc4
RUN wget https://almond-static.stanford.edu/test-data/cvc4-1.6-x86_64-linux-opt -O /usr/local/bin/cvc4

# install other dependencies
RUN yum -y install GraphicsMagick bubblewrap

# download classifer and PPDB
RUN mkdir -p /usr/local/share/almond-cloud/classifier && \
    wget https://nnmaster.almond.stanford.edu/test-models/classifier1.tar.gz  && \
    tar xvf classifier1.tar.gz -C /usr/local/share/almond-cloud/classifier && \
    rm -f classifier1.tar.gz
RUN pip3 install pytorch_transformers tensorboardX tqdm
ENV ALMOND_FRONTEND_CLASSIFIER=/usr/local/share/almond-cloud/classifier

RUN wget https://parmesan.stanford.edu/glove/ppdb-2.0-m-lexical.bin -O /usr/local/share/ppdb-2.0-m-lexical.bin && \
    chmod 755 /usr/local/share/ppdb-2.0-m-lexical.bin
ENV PPDB=/usr/local/share/ppdb-2.0-m-lexical.bin
ENV DECANLP_EMBEDDINGS=/usr/local/share/decanlp/embeddings
# ensures python sys.std* encoding is always utf-8
ENV PYTHONIOENCODING=UTF-8

# copy source and install packages
COPY . /opt/almond-cloud/
WORKDIR /opt/almond-cloud/
RUN echo "build_from_source true" > .yarnrc && echo "sqlite_libname sqlcipher" >> .yarnrc
RUN yarn install

# add user almond-cloud
RUN useradd -ms /bin/bash -r almond-cloud
USER almond-cloud
WORKDIR /home/almond-cloud

ENTRYPOINT ["/bin/bash", "/opt/almond-cloud/docker/start.sh"]
